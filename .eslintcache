[{"/Users/minhoui/Desktop/study/project/jolp/front-server/src/index.js":"1","/Users/minhoui/Desktop/study/project/jolp/front-server/src/App.js":"2","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignIn.js":"3","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/service/Search.js":"4","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/Home.js":"5","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/Nav.js":"6","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template.js":"7","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/LogIn.js":"8","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignUp.js":"9","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/LightButton.js":"10","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Theme2.js":"11","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Theme1.js":"12","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/List.js":"13","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/search/Search.js":"14","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/TemplateSelector.js":"15","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/Template2.js":"16","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/CustomTextField.js":"17","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Horizontal.js":"18","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Vertical.js":"19","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/keyword/Keyword.js":"20","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/pagination.js/Pagination.js":"21","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/AboutMe.js":"22","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/Project.js":"23","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/Career.js":"24","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Item.js":"25","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Item.js":"26"},{"size":243,"mtime":1609227681576,"results":"27","hashOfConfig":"28"},{"size":695,"mtime":1611897847378,"results":"29","hashOfConfig":"28"},{"size":3118,"mtime":1611897837812,"results":"30","hashOfConfig":"28"},{"size":301,"mtime":1609941573036,"results":"31","hashOfConfig":"28"},{"size":5591,"mtime":1611902000270,"results":"32","hashOfConfig":"28"},{"size":3157,"mtime":1611902775162,"results":"33","hashOfConfig":"28"},{"size":640,"mtime":1611897847382,"results":"34","hashOfConfig":"28"},{"size":2203,"mtime":1611897837812,"results":"35","hashOfConfig":"28"},{"size":2492,"mtime":1611897837813,"results":"36","hashOfConfig":"28"},{"size":198,"mtime":1609391766519,"results":"37","hashOfConfig":"28"},{"size":11649,"mtime":1611999182285,"results":"38","hashOfConfig":"28"},{"size":16272,"mtime":1611897847383,"results":"39","hashOfConfig":"28"},{"size":1521,"mtime":1609941573032,"results":"40","hashOfConfig":"28"},{"size":2127,"mtime":1611901168351,"results":"41","hashOfConfig":"28"},{"size":676,"mtime":1611897847382,"results":"42","hashOfConfig":"28"},{"size":2679,"mtime":1611993555548,"results":"43","hashOfConfig":"28"},{"size":1182,"mtime":1611897847381,"results":"44","hashOfConfig":"28"},{"size":366,"mtime":1609941573032,"results":"45","hashOfConfig":"28"},{"size":363,"mtime":1609941573034,"results":"46","hashOfConfig":"28"},{"size":386,"mtime":1609941573033,"results":"47","hashOfConfig":"28"},{"size":394,"mtime":1609941573033,"results":"48","hashOfConfig":"28"},{"size":2469,"mtime":1611897847384,"results":"49","hashOfConfig":"28"},{"size":4948,"mtime":1611897847385,"results":"50","hashOfConfig":"28"},{"size":3568,"mtime":1611897847385,"results":"51","hashOfConfig":"28"},{"size":695,"mtime":1609941573034,"results":"52","hashOfConfig":"28"},{"size":630,"mtime":1609941573033,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"61qu1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"/Users/minhoui/Desktop/study/project/jolp/front-server/src/index.js",[],["117","118"],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/App.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignIn.js",["119","120","121","122","123","124","125"],"import React, {useState} from 'react';\nimport './SignIn.css'\nimport signin_back from '../../factory/images/signin_back3.jpg';\nimport {Grid, TextField, Typography, Button, FormControl, FormLabel, FormGroup, FormControlLabel, Checkbox, FormHelperText} from \"@material-ui/core\";\nimport SignUp from './SignUp';\nimport LogIn from './LogIn';\n\nconst SignIn = () =>{\n    const [mode, setMode] = useState(0);\n    return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"\n          style={{backgroundImage: `url(${signin_back})`, height: '100vh', textAlign: 'center'}}>\n          <Grid item xs={3} style={{color: 'white'}}>\n              <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item xs={6}>\n                      {mode === 0 ? (<Typography variant=\"h6\" style={{textAlign: 'left'}}>로그인</Typography>) :\n                       mode === 1 ? (<Typography variant=\"h6\" style={{textAlign: 'left'}}>회원가입</Typography>) :\n                                    (<Typography variant=\"h6\" style={{textAlign: 'left'}}>비밀번호 찾기</Typography>)\n                      }\n                  </Grid>\n                      { mode === 0 ? (\n                          <Grid item xs={6}>\n                              <Button onClick={() => setMode(2)} style={{padding: 0}}>\n                                  <Typography variant=\"overline\" style={{textAlign: 'right', fontWeight: 500, color: 'grey'}}> 비밀번호를 잊어버리셨나요?</Typography>\n                              </Button>\n                          </Grid>) : <Grid item xs={6}></Grid>\n                      }\n\n                      {mode === 0 ? <LogIn/> :\n                       mode === 1 ? <SignUp/> :\n                                    <FindPassword/>}\n\n                       <Grid item xs={12}>\n                      {mode === 0 ?\n                          <Button onClick={() => setMode(1)} style={{padding: 0}}>\n                              <Typography variant=\"overline\" style={{width: '100%', textAlign: 'right', fontWeight: 500, color: 'grey', position: 'right'}}>계정 생성하기</Typography>\n                          </Button> : <></>\n                      }\n                       </Grid>\n              </Grid>\n          </Grid>\n      </Grid>\n\n  );\n}\n\nconst FindPassword = React.memo(function FindPassword() {\n  console.log(\"forget password\");\n  return<Grid item xs={12}>\n            <form>\n              <FormControl style={{width: '100%'}}>\n                    <TextField id=\"filled-basic\" label=\"이메일 (example@gmail.com)\" variant=\"filled\" type=\"email\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         style={{ marginTop: '3%'}} />\n              </FormControl>\n              <Button onClick={refreshPage} variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>확인</Button>\n            </form>\n        </Grid>;\n});\n\nfunction refreshPage() { window. location. reload(false); }\n\nexport default SignIn;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/service/Search.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/Home.js",["126","127","128","129","130"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport back3 from '../../factory/images/home_back1.gif';\nimport LightButton from \"./LightButton\";\nimport ls2 from '../../factory/images/home_back2.jpg';\nimport {Typography} from \"@material-ui/core\";\nimport sang from '../../factory/images/sang.png';\nimport min from '../../factory/images/min.png';\nimport woo from '../../factory/images/woo.png';\nimport logo from '../../factory/images/logo.png';\n\nconst Home = () => (\n  <>\n      <Typography style={{flexGrow: 1}}>\n      <Link to=\"/\">\n        <img onClick src={logo} style={{top: 0, height: '10%', position: \"fixed\", zIndex: 1, margin: '1%'}}></img>\n      </Link>\n          </Typography>\n      {/*<Typography style={{flexGrow:1}}>*/}\n      {/*      <Link to=\"/\">*/}\n      {/*        <img*/}\n      {/*            // onClick src={logo} height={this.state.imgHeight} style={{WebkitTransition: 'all 0.7s ease-in-out', transition: 'all 0.7s ease-in-out', verticalAlign: \"middle\"}}*/}\n      {/*            heightstyle={{height: '13%'}} src={logo}*/}\n      {/*        />*/}\n      {/*      </Link>*/}\n      {/*    </Typography>*/}\n      <ReactFullpage\n          scrollingSpeed = {800} navigation\n          render={({ state, fullpageApi }) => {\n              return (\n                  <ReactFullpage.Wrapper>\n                      <div className=\"section\"\n                          style={{backgroundImage: `url(${back3})`, backgroundSize: 'cover', backgroundPosition: 'center', padding: '1em'}}>\n\n                          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{minHeight: '75vh'}}>\n                              <Grid item xs={5}>\n                                  <Link to=\"/template\">\n                                      <LightButton />\n                                  </Link>\n                              </Grid>\n                          </Grid>\n                      </div>\n\n                      <div className=\"section\" style={{backgroundColor: 'rgb(235, 234, 229)', padding: '1em',}}>\n                          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{minHeight: '75vh'}}>\n                              <Grid item xs={5} style={{marginRight: '5%'}}>\n                                  <Grid container direction=\"column\">\n                                      <Grid item>\n                                          <Typography variant=\"h2\" style={{float: 'right', fontWeight: 900}}>FEF</Typography>\n                                      </Grid>\n                                      <Grid item>\n                                          <Typography variant=\"h4\" style={{float: 'right', fontWeight: 900}}>Fast Easy Free</Typography>\n                                      </Grid>\n                                  </Grid>\n                              </Grid>\n                              <Grid item xs={5} style={{marginTop: '1%'}}>\n                                  <img src={ls2} width='100%' />\n                              </Grid>\n                          </Grid>\n                      </div>\n\n                      <div className=\"section\" style={{backgroundColor: 'rgb(25,25,25)', padding: '1em',}}>\n\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{textAlign: \"center\"}}>\n                    <Grid item xs={12} style={{marginBottom: '2%'}}>\n                        <Typography variant=\"h3\" style={{fontSpacing: 5, fontWeight: 900, padding: 0, color: 'white', fontVariant: 'small-caps'}}>creator team</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginLeft: '8%'}}>\n                        <img src={sang} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>jisang yu</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>economics</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>jisang yu</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginRight: '3%', marginLeft: '3%'}}>\n                        <img src={woo} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>youngwoo choi</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>computer science</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>youngwoo choi</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginRight: '8%'}}>\n                        <img src={min} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>minho choi</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>computer science</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>minho choi</Typography>\n                    </Grid>\n\n                </Grid>\n            </div>\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  </>\n);\n\nexport default Home;\n\n// 참고자료: https://github.com/alvarotrigo/react-fullpage","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/Nav.js",["131","132"],"import React, { useEffect, useState } from 'react';\nimport './Nav.css';\nimport logo from '../../factory/images/logo.png';\nimport { Link } from 'react-router-dom';\nimport {AppBar, Toolbar, Typography} from \"@material-ui/core\";\nimport Search from \"./search/Search\";\n\nconst Nav = () =>{\n  const [mode, setMode] = useState(\"nav-init\");\n  const [mode2, setMode2] = useState(\"img-init\");\n  const pathname = window.location.pathname\n\n  useEffect(()=>{\n    function handleMode(){\n      if(window.scrollY > 0){\n        setMode(\"nav-shrink\");\n        setMode2(\"img-shrink\");\n      } else {\n        setMode(\"nav-init\");\n        setMode2(\"img-init\");\n      }\n    }\n    window.addEventListener(\"scroll\", handleMode);\n\n    return ()=>{\n      window.removeEventListener(\"scroll\", handleMode);\n    }\n  }, [])\n\n  return(\n      <AppBar className={mode}>\n        <Toolbar style={{ display: pathname == '/sign_in'? 'none': null, backgroundColor: mode === 'nav-shrink' ? 'rgb(26, 26, 26)' : null, paddingRight: '3%', paddingLeft: 0, height: '100%', justifyContent: 'center' }}>\n          <Typography style={{flexGrow:1}}>\n            <Link to=\"/\">\n              <img\n                  // onClick src={logo} height={this.state.imgHeight} style={{WebkitTransition: 'all 0.7s ease-in-out', transition: 'all 0.7s ease-in-out', verticalAlign: \"middle\"}}\n                  className={mode2} src={logo}\n              />\n            </Link>\n          </Typography>\n\n          <Typography variant = \"\"  color=\"inherit\" style={{marginRight: 50}}>\n            <Search />\n          </Typography>\n\n          <Typography className=\"padding\" variant = \"\"  color=\"inherit\">\n            <Link className=\"navLink\" to=\"/home\" style={{color: mode === 'nav-shrink' ? 'white' : 'black'}}>home</Link>\n          </Typography>\n          <Typography className=\"padding\" variant = \"\"  color=\"inherit\">\n            <Link className=\"navLink\" to=\"/template\" style={{color: mode === 'nav-shrink' ? 'white' : 'black'}}>template</Link>\n          </Typography>\n          <Typography className=\"padding\" variant = \"\"  color=\"inherit\">\n            <Link className=\"navLink\" to=\"/account\" style={{color: mode === 'nav-shrink' ? 'white' : 'black'}}>login</Link>\n          </Typography>\n\n        </Toolbar>\n        {/*<Link to=\"/\"><img className={mode2} src={logo} /></Link>*/}\n        {/*<nav style={{ display: pathname == '/sign_in'? 'none': null, backgroundColor: mode === 'nav-shrink' ? 'rgb(26, 26, 26)' : null, paddingRight: '3%', height: '100%', justifyContent: 'center' }}>*/}\n        {/*  <ul className=\"nav-ul\">*/}\n        {/*    <Link>*/}\n        {/*    <li className=\"nav-li\" ><Search/></li>*/}\n        {/*      </Link>*/}\n        {/*    <Link to=\"/template\" className=\"nav-link\">*/}\n        {/*      <li className=\"nav-li\" style={{color: mode === 'nav-shrink' ? 'white' : null}}>template</li>*/}\n        {/*    </Link>*/}\n        {/*    <Link to=\"/account\" className=\"nav-link\">*/}\n        {/*      <li className=\"nav-li\"  style={{color: mode === 'nav-shrink' ? 'white' : null}}>login</li>*/}\n        {/*    </Link>*/}\n        {/*  </ul>*/}\n        {/*</nav>*/}\n      </AppBar>\n  )\n}\n\nexport default Nav;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/LogIn.js",["133"],"import React from 'react';\nimport './SignIn.css'\nimport {Grid, TextField, Button, FormControl} from \"@material-ui/core\";\nimport { useForm, Controller } from 'react-hook-form';\nimport axios from 'axios';\n\nconst TEMPLATE_BASE_URL = 'http://localhost:8080/process';\n\nconst LogIn = () =>{\n  const methods = useForm();\n  const { handleSubmit, reset, control} = methods;\n  const onSubmit = data =>{\n    console.log(data);\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: data\n    })\n    .then((res)=>{\n      console.log(\"succeslla\");\n      console.log(res);\n    })\n    .catch((err)=>{\n      console.log(\"sail\");\n      console.log(err);\n    });\n\n  }\n\n  return(\n    <Grid item xs={12}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"username\"\n            control={control}\n            rules={{ required: \"This is requierd\", minLength: 2 }}\n            as={\n              <TextField \n                id=\"login-email\"\n                label=\"이메일 (example@gmail.com)\" \n                variant=\"filled\" \n                type=\"email\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{ required: \"This is requierd\", minLength: 2 }}\n            as={\n              <TextField\n                id=\"login-password\" \n                label=\"비밀번호\" \n                variant=\"filled\" \n                type=\"password\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <Button type=\"submit\" variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>로그인</Button>\n      </form>\n    </Grid>\n  )\n}\n\nexport default LogIn;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignUp.js",["134"],"import React from 'react';\nimport {Grid, TextField, Button, FormControl} from \"@material-ui/core\";\nimport { useForm, Controller } from 'react-hook-form';\nimport axios from 'axios';\n\nconst TEMPLATE_BASE_URL = 'http://localhost:8080/member';\n\nconst SignUp = () => {\n  const methods = useForm();\n  const { handleSubmit, reset, control} = methods;\n  const onSubmit = data =>{\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: data\n    })\n    .then((res)=>{\n      console.log(res.body);\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n\n  }\n\n  return(\n    <Grid item xs={12}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"name\"\n            control={control}\n            rules={{ required: \"This is requierd\", minLength: 2 }}\n            as={\n              <TextField\n               id=\"signup\"\n               label=\"이름 (2자 이상)\"\n               variant=\"filled\"\n               InputProps={{\n                 style: { backgroundColor: 'whitesmoke'}\n               }}\n               style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"email\"\n            control={control}\n            rules={{ required: true }}\n            as={\n              <TextField id=\"filled-basic\" label=\"이메일 (example@gamil.com)\" variant=\"filled\" type=\"email\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{ required: true, minLength: 6 }}\n            as={\n              <TextField id=\"filled-basic\" label=\"비밀번호 (6자 이상)\" variant=\"filled\" type=\"password\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <Button type=\"submit\"\n          variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>계정 생성하기</Button>\n      </form>\n    </Grid>\n  )\n}\n\nexport default SignUp;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/LightButton.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Theme2.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Theme1.js",["155","156","157","158"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n    Button,\n    Card,\n    CardContent, FormControl, FormControlLabel, FormLabel,\n    Grid,\n    Paper, Radio, RadioGroup,\n    Table,\n    TableBody, TableCell, TableContainer,\n    TableHead, TableRow,\n    TextField,\n    Typography\n} from '@material-ui/core';\nimport CustomTextField from \"./CustomTextField\";\n\nconst Theme1 = () =>{\n    const { handleSubmit, register, errors } = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\"\n                  style={{marginTop: 102, textAlign: \"center\", paddingLeft: '15%', paddingRight: '15%'}}>\n                <Grid item xs={4}>\n                    <Button variant=\"contained\" component=\"label\">\n                        Image Upload\n                        <input type=\"file\" hidden/>\n                    </Button>\n                </Grid>\n                <Grid container xs={8} style={{textAlign: 'left'}}>\n                    <Grid item xs={5}>\n                        <Grid item xs={12}>\n                            {/* Customize TextField */}\n                            {/*<FormControl className=\"input\">*/}\n                            {/*    <TextField*/}\n                            {/*        onChange={handleChange}*/}\n                            {/*        id=\"name\" name=\"name\"*/}\n                            {/*        label=\"이름 *\"*/}\n                            {/*        variant=\"outlined\"*/}\n                            {/*        inputRef={*/}\n                            {/*            register({*/}\n                            {/*                required: true, minLength: 2 })}*/}\n                            {/*        error={errors.name ? true : false}*/}\n                            {/*        helperText={errors.name ?*/}\n                            {/*            errors.name.type === \"required\" ? \"This field is required\" :*/}\n                            {/*            \"min length is 2 characters\" : null}*/}\n                            {/*    />*/}\n                            {/*</FormControl>*/}\n                            <CustomTextField\n                                register={register}\n                                errors={errors.name}    // 사용 errors.[사용할 filed name]\n                                name=\"name\" label=\"이름\" required={true}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                register={register}\n                                errors={errors.eng_name}\n                                name=\"eng_name\" label=\"영어이름\" required={true}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={5}>\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                register={register}\n                                errors={errors.birth}\n                                name=\"birth\" label=\"생년월일\" required={true}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                register={register}\n                                errors={errors.phone}\n                                name=\"phone\" label=\"휴대폰\" required={true}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            register={register}\n                            errors={errors.address}\n                            name=\"address\" label=\"거주지(현주소)\" required={true}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            register={register}\n                            errors={errors.email}\n                            name=\"email\" label=\"이메일\" required={true}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'left', marginBottom: 24}}>\n                    {/*<Paper variant=\"outlined\"></Paper>*/}\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>학 력 사 항</Typography>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"right\" style={{width: '20%'}}>졸업일</TableCell>\n                                    <TableCell align=\"right\">학교명</TableCell>\n                                    <TableCell align=\"right\">전 공</TableCell>\n                                    <TableCell align=\"right\" style={{width: '13%'}}>졸업여부</TableCell>\n                                    <TableCell align=\"right\" style={{width: '10%'}}>성 적</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* HighSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"고등학교\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* University */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"대학교\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* GraduateSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"대학원\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'left', marginBottom: 24}}>\n                    {/*<Paper variant=\"outlined\"></Paper>*/}\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>경 력 사 항</Typography>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"right\" style={{width: '20%'}}>근무기간</TableCell>\n                                    <TableCell align=\"right\" style={{width: '35%'}}>회사명</TableCell>\n                                    <TableCell align=\"right\">직 위</TableCell>\n                                    <TableCell align=\"right\">담당업무</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* HighSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* University */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'left', marginBottom: 24}}>\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>자 격 사 항</Typography>\n\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"right\" style={{width: '20%'}}>취득일</TableCell>\n                                    <TableCell align=\"right\">종 류</TableCell>\n                                    <TableCell align=\"right\" style={{width: '30%'}}>발 령 처</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* HighSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* University */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={5} style={{textAlign: 'left', marginBottom: 24}}>\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>병 역 사 항</Typography>\n\n                        <FormControl component=\"fieldset\" style={{margin: 20}}>\n                            <RadioGroup row  name=\"military_status\" defaultValue=\"init\">\n                                <FormControlLabel value=\"fulfilled\" control={<Radio color=\"primary\" />} label=\"군필\" />\n                                <FormControlLabel value=\"unfulfilled\" control={<Radio color=\"primary\" />} label=\"미필\" />\n                                <FormControlLabel value=\"Exempted\" control={<Radio color=\"primary\" />} label=\"면제\" />\n                                <FormControlLabel value=\"etc\" control={<Radio color=\"primary\" />} label=\"기타\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={6} style={{textAlign: 'left', marginBottom: 24}}>\n                    <TableContainer component={Paper} variant=\"outlined\" style={{height: 116}}>\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>기 타 사 항</Typography>\n\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">submit</Button>\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n}\n\nexport default Theme1;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/List.js",["159"],"import React, {useState, useEffect} from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport Horizontal from './horizontal/Horizontal';\nimport Vertical from './vertical/Vertical';\nimport Keyword from './keyword/Keyword';\nimport Pagination from './pagination.js/Pagination';\n\nconst COUNT = 3;\n\nconst List = ({keyword, resume}) =>{\n\n  const [mode, setMode] = useState(0);    // horizontal : 0, 전체모드\n\n  const allCount = resume.length;\n  const initCount = allCount < COUNT ? allCount : COUNT;\n  const [count, setCount] = useState(initCount);\n\n  const countHandler = () =>{\n    if(count === allCount){\n      setCount(initCount);\n    }\n    else{\n      let newCount = count+COUNT < allCount ? count+COUNT : allCount;\n      setCount(newCount);\n    }\n  }\n\n\n  useEffect(()=>{\n    const widthListener = () =>{\n      if(window.innerWidth > 770){\n        setMode(0);\n      }else{\n        setMode(1);\n      }\n    }\n    setCount(initCount);\n    window.addEventListener(\"resize\", widthListener);\n    return ()=>{\n      window.removeEventListener(\"resize\", widthListener);\n    }\n  }, [keyword])\n\n\n  return (\n    <Grid container justify=\"center\" style={{marginTop: 102}}>\n      <Keyword mode={mode} keyword={keyword}/>\n      {mode === 0 ?\n        <Horizontal resume={resume} count={count}/>\n      :\n        <Vertical resume={resume} count={count}/>\n      }\n      <Grid container xs={8}>\n        <Pagination countHandler={countHandler} count={count} allCount={allCount}/>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default List;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/search/Search.js",["160","161","162","163","164","165","166"],"import React, {useState} from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport axios from 'axios';\nimport { FiSearch } from 'react-icons/fi';\nimport {useHistory} from 'react-router-dom';\n\nimport './Search.css';\n\nconst Search = () =>{\n  const [mode, setMode] = useState(0);\n  const [focused, setFocus] = useState(false);\n  const history = useHistory();\n  const TEMPLATE_BASE_URL = 'http://localhost:8080/template';\n\n  const modeHandler = () =>{\n    if(mode === 0){\n      setMode(1)\n    }\n  }\n\n  const focus = (e) => {\n    e.preventDefault();\n    setFocus(value => !value);\n  }\n\n  const searchEvent = (e) =>{\n    e.preventDefault();\n    const body = {\n      keyword : e.target.keyword.value\n    }\n    if(body.keyword === \"\") return;\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: body\n    })\n        .then((res)=>{\n          history.push({\n            pathname: \"/search/\"+body.keyword,\n            state:{\n              resume: res.data\n            }\n          });\n\n        })\n        .catch((err)=>{\n          console.log(err);\n        });\n  }\n\n  return(\n      <>\n        {/*<div className=\"app\">*/}\n          <div className=\"container\">\n            <input type=\"text\" className={focused && 'focused' } placeholder=\"Search\"/>\n            <button onClick={focus} id=\"search-button\" className={focused && 'active'}>🔍</button>\n          </div>\n        {/*</div>*/}\n        {/*<button className=\"search-button\" onClick={modeHandler}>*/}\n        {/*  <form onSubmit={searchEvent}>*/}\n        {/*    <p className=\"search-button-font\">*/}\n        {/*      <FiSearch/>*/}\n        {/*      검색{\" \"}*/}\n        {/*      {mode === 0 ? <></> :*/}\n        {/*        <input className=\"search-button-input\" id='keyword' name='keyword' type='keyword' autoFocus></input>*/}\n        {/*      }*/}\n        {/*    </p>*/}\n        {/*  </form>*/}\n        {/*</button>*/}\n      </>\n  );\n}\n\nexport default Search;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/TemplateSelector.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/Template2.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/CustomTextField.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Horizontal.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Vertical.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/keyword/Keyword.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/pagination.js/Pagination.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/AboutMe.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/Project.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template2/Career.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Item.js",["167"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport './vertical.css';\nimport woo from '../../../factory/images/woo.png';\n\nconst Item = ({item}) => {\n\n  return(\n    <>\n      <Grid item xs={3}>\n        <button className='vertical-item-btn'>\n          <img className='vertical-item-img' src={woo} />\n        </button>\n      </Grid>\n      <Grid item xs={8}>\n        <Grid container>\n          <p className='vertical-item-title'>{item.valueword}</p>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nfunction areEqual(preProps, nextProps){\n  if(preProps.item.id === nextProps.item.id){\n    return true;\n  }else {\n    return false;\n  }\n}\n\nexport default React.memo(Item, areEqual);","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Item.js",["168"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport woo from '../../../factory/images/woo.png';\nimport './horizontal.css';\n\nconst Item = ({item}) => {\n\n  return(\n    <Grid item xs={4} className='horizontal-item-grid'>\n      <button className='horizontal-item-btn'>\n        <img src={woo} className='horizontal-item-img'/>\n        <p className='horizontal-item-title'>{item.valueword}</p>\n      </button>\n    </Grid>\n  )\n}\n\nfunction areEqual(preProps, nextProps){\n  if(preProps.item.id === nextProps.item.id){\n    return true;\n  }else {\n    return false;\n  }\n}\n\n\n\nexport default React.memo(Item, areEqual);",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":4,"column":59,"nodeType":"175","messageId":"176","endLine":4,"endColumn":68},{"ruleId":"173","severity":1,"message":"177","line":4,"column":70,"nodeType":"175","messageId":"176","endLine":4,"endColumn":79},{"ruleId":"173","severity":1,"message":"178","line":4,"column":81,"nodeType":"175","messageId":"176","endLine":4,"endColumn":97},{"ruleId":"173","severity":1,"message":"179","line":4,"column":99,"nodeType":"175","messageId":"176","endLine":4,"endColumn":107},{"ruleId":"173","severity":1,"message":"180","line":4,"column":109,"nodeType":"175","messageId":"176","endLine":4,"endColumn":123},{"ruleId":"181","severity":1,"message":"182","line":63,"column":26,"nodeType":"183","messageId":"184","endLine":63,"endColumn":50,"fix":"185"},{"ruleId":"181","severity":1,"message":"186","line":63,"column":26,"nodeType":"183","messageId":"184","endLine":63,"endColumn":42,"fix":"187"},{"ruleId":"188","severity":1,"message":"189","line":20,"column":9,"nodeType":"190","endLine":20,"endColumn":109},{"ruleId":"188","severity":1,"message":"189","line":61,"column":35,"nodeType":"190","endLine":61,"endColumn":65},{"ruleId":"188","severity":1,"message":"189","line":74,"column":25,"nodeType":"190","endLine":74,"endColumn":86},{"ruleId":"188","severity":1,"message":"189","line":81,"column":25,"nodeType":"190","endLine":81,"endColumn":85},{"ruleId":"188","severity":1,"message":"189","line":88,"column":25,"nodeType":"190","endLine":88,"endColumn":85},{"ruleId":"191","severity":1,"message":"192","line":32,"column":45,"nodeType":"193","messageId":"194","endLine":32,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":35,"column":15,"nodeType":"190","endLine":38,"endColumn":17},{"ruleId":"173","severity":1,"message":"195","line":11,"column":25,"nodeType":"175","messageId":"176","endLine":11,"endColumn":30},{"ruleId":"173","severity":1,"message":"195","line":10,"column":25,"nodeType":"175","messageId":"176","endLine":10,"endColumn":30},{"ruleId":"173","severity":1,"message":"196","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":17},{"ruleId":"173","severity":1,"message":"197","line":4,"column":31,"nodeType":"175","messageId":"176","endLine":4,"endColumn":40},{"ruleId":"173","severity":1,"message":"198","line":11,"column":8,"nodeType":"175","messageId":"176","endLine":11,"endColumn":12},{"ruleId":"173","severity":1,"message":"199","line":12,"column":8,"nodeType":"175","messageId":"176","endLine":12,"endColumn":12},{"ruleId":"173","severity":1,"message":"200","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":12},{"ruleId":"173","severity":1,"message":"201","line":15,"column":8,"nodeType":"175","messageId":"176","endLine":15,"endColumn":12},{"ruleId":"173","severity":1,"message":"202","line":17,"column":9,"nodeType":"175","messageId":"176","endLine":17,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":87,"column":37,"nodeType":"190","endLine":87,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":89,"column":33,"nodeType":"190","endLine":92,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":98,"column":37,"nodeType":"190","endLine":98,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":100,"column":33,"nodeType":"190","endLine":103,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":108,"column":37,"nodeType":"190","endLine":108,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":110,"column":33,"nodeType":"190","endLine":113,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":119,"column":37,"nodeType":"190","endLine":119,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":121,"column":33,"nodeType":"190","endLine":124,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":130,"column":37,"nodeType":"190","endLine":130,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":132,"column":33,"nodeType":"190","endLine":135,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":141,"column":37,"nodeType":"190","endLine":141,"endColumn":68},{"ruleId":"188","severity":1,"message":"189","line":143,"column":33,"nodeType":"190","endLine":146,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":190,"column":29,"nodeType":"190","endLine":190,"endColumn":91},{"ruleId":"173","severity":1,"message":"203","line":5,"column":5,"nodeType":"175","messageId":"176","endLine":5,"endColumn":9},{"ruleId":"173","severity":1,"message":"204","line":6,"column":5,"nodeType":"175","messageId":"176","endLine":6,"endColumn":16},{"ruleId":"173","severity":1,"message":"174","line":6,"column":49,"nodeType":"175","messageId":"176","endLine":6,"endColumn":58},{"ruleId":"173","severity":1,"message":"197","line":12,"column":5,"nodeType":"175","messageId":"176","endLine":12,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":43,"column":6,"nodeType":"207","endLine":43,"endColumn":15,"suggestions":"208"},{"ruleId":"173","severity":1,"message":"209","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"210","line":2,"column":16,"nodeType":"175","messageId":"176","endLine":2,"endColumn":26},{"ruleId":"173","severity":1,"message":"211","line":3,"column":8,"nodeType":"175","messageId":"176","endLine":3,"endColumn":18},{"ruleId":"173","severity":1,"message":"212","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":17},{"ruleId":"173","severity":1,"message":"213","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":18},{"ruleId":"173","severity":1,"message":"214","line":17,"column":9,"nodeType":"175","messageId":"176","endLine":17,"endColumn":20},{"ruleId":"173","severity":1,"message":"215","line":28,"column":9,"nodeType":"175","messageId":"176","endLine":28,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":13,"column":11,"nodeType":"190","endLine":13,"endColumn":58},{"ruleId":"188","severity":1,"message":"189","line":12,"column":9,"nodeType":"190","endLine":12,"endColumn":57},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'FormLabel' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FormHelperText' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property reload.","MemberExpression","unexpectedWhitespace",{"range":"218","text":"219"},"Unexpected whitespace before property location.",{"range":"220","text":"219"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reset' is assigned a value but never used.","'useForm' is defined but never used.","'TextField' is defined but never used.","'t2_7' is defined but never used.","'t2_8' is defined but never used.","'t2_9' is defined but never used.","'edit' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initCount'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'fade' is defined but never used.","'makeStyles' is defined but never used.","'SearchIcon' is defined but never used.","'InputBase' is defined but never used.","'FiSearch' is defined but never used.","'modeHandler' is assigned a value but never used.","'searchEvent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[3003,3005],".",[2993,2995],{"desc":"222","fix":"223"},"Update the dependencies array to be: [initCount, keyword]",{"range":"224","text":"225"},[1074,1083],"[initCount, keyword]"]