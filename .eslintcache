[{"/Users/minhoui/Desktop/study/project/jolp/front-server/src/index.js":"1","/Users/minhoui/Desktop/study/project/jolp/front-server/src/App.js":"2","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignIn.js":"3","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/Home.js":"4","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/Nav.js":"5","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/service/Search.js":"6","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template.js":"7","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/LightButton.js":"8","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/NavItem.js":"9","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/List.js":"10","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/search/Search.js":"11","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/pagination.js/Pagination.js":"12","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/keyword/Keyword.js":"13","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Vertical.js":"14","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Horizontal.js":"15","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Item.js":"16","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Item.js":"17","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template1.js":"18","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/CustomTextField.js":"19"},{"size":243,"mtime":1609227681576,"results":"20","hashOfConfig":"21"},{"size":938,"mtime":1610285568964,"results":"22","hashOfConfig":"21"},{"size":6098,"mtime":1610278769231,"results":"23","hashOfConfig":"21"},{"size":5091,"mtime":1609941360050,"results":"24","hashOfConfig":"21"},{"size":1701,"mtime":1610635841258,"results":"25","hashOfConfig":"21"},{"size":301,"mtime":1609941573036,"results":"26","hashOfConfig":"21"},{"size":476,"mtime":1610639134001,"results":"27","hashOfConfig":"21"},{"size":198,"mtime":1609391766519,"results":"28","hashOfConfig":"21"},{"size":764,"mtime":1609941895099,"results":"29","hashOfConfig":"21"},{"size":1521,"mtime":1609941573032,"results":"30","hashOfConfig":"21"},{"size":1559,"mtime":1610634325688,"results":"31","hashOfConfig":"21"},{"size":394,"mtime":1609941573033,"results":"32","hashOfConfig":"21"},{"size":386,"mtime":1609941573033,"results":"33","hashOfConfig":"21"},{"size":363,"mtime":1609941573034,"results":"34","hashOfConfig":"21"},{"size":366,"mtime":1609941573032,"results":"35","hashOfConfig":"21"},{"size":630,"mtime":1609941573033,"results":"36","hashOfConfig":"21"},{"size":695,"mtime":1609941573034,"results":"37","hashOfConfig":"21"},{"size":16278,"mtime":1610640096386,"results":"38","hashOfConfig":"21"},{"size":1182,"mtime":1610632181040,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"61qu1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/minhoui/Desktop/study/project/jolp/front-server/src/index.js",[],["90","91"],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/App.js",["92"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\n\nimport Nav from './component/navigation/Nav';\nimport SignIn from './component/signin/SignIn';\nimport Home from './component/home/Home';\nimport Search from './component/service/Search';\nimport Template from './component/template/Template';\nimport Template1 from \"./component/template/Template1\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/\"><Nav /></Route>\n      </Switch>\n\n      {/*<Route path=\"/\"><Grid container style={{height: \"102px\"}}></Grid></Route>*/}\n\n      <Switch>\n        <Route path=\"/sign_in\"><SignIn /></Route>\n        <Route path=\"/search/:path\"><Search/></Route>\n        <Route path=\"/template\"><Template/></Route>\n        <Route path=\"/template1\" component={Template1} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignIn.js",["93","94","95","96","97","98","99","100","101"],"import React, {useState} from 'react';\nimport './SignIn.css'\nimport signin_back from '../../factory/images/signin_back3.jpg';\nimport {Grid, TextField, Typography, Button, FormControl, FormLabel, FormGroup, FormControlLabel, Checkbox, FormHelperText} from \"@material-ui/core\";\n\nconst SignIn = () =>{\n    const [mode, setMode] = useState(0);\n    return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"\n          style={{backgroundImage: `url(${signin_back})`, height: '100vh', textAlign: 'center'}}>\n          <Grid item xs={3} style={{color: 'white'}}>\n              <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item xs={6}>\n                      {mode === 0 ? (<Typography variant=\"h6\" style={{textAlign: 'left'}}>로그인</Typography>) :\n                       mode === 1 ? (<Typography variant=\"h6\" style={{textAlign: 'left'}}>회원가입</Typography>) :\n                                    (<Typography variant=\"h6\" style={{textAlign: 'left'}}>비밀번호 찾기</Typography>)\n                      }\n                  </Grid>\n                      { mode === 0 ? (\n                          <Grid item xs={6}>\n                              <Button onClick={() => setMode(2)} style={{padding: 0}}>\n                                  <Typography variant=\"overline\" style={{textAlign: 'right', fontWeight: 500, color: 'grey'}}> 비밀번호를 잊어버리셨나요?</Typography>\n                              </Button>\n                          </Grid>) : <Grid item xs={6}></Grid>\n                      }\n\n                      {mode === 0 ? <Login/> :\n                       mode === 1 ? <SignUp/> :\n                                    <FindPassword/>}\n\n                       <Grid item xs={12}>\n                      {mode === 0 ?\n                          <Button onClick={() => setMode(1)} style={{padding: 0}}>\n                              <Typography variant=\"overline\" style={{width: '100%', textAlign: 'right', fontWeight: 500, color: 'grey', position: 'right'}}>계정 생성하기</Typography>\n                          </Button> : <></>\n                      }\n                       </Grid>\n              </Grid>\n          </Grid>\n      </Grid>\n\n  );\n}\n\nconst Login = React.memo(function Login() {\n  console.log(\"login\");\n  return<Grid item xs={12}>\n            <form\n                // onSubmit\n            >\n                <FormControl style={{width: '100%'}}>\n                    <TextField id=\"filled-basic\" label=\"이메일 (example@gmail.com)\" variant=\"filled\" type=\"email\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         name=\"name\"\n                         style={{ marginTop: '3%'}} />\n                </FormControl>\n                <FormControl style={{width: '100%'}}>\n                    <TextField id=\"filled-basic\" label=\"비밀번호\" variant=\"filled\" type=\"password\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         name=\"name\"\n                         style={{ marginTop: '3%'}} />\n                </FormControl>\n\n                    <Button variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>로그인</Button>\n\n            </form>\n        </Grid>;\n});\n\nconst SignUp = React.memo(function SignUp() {\n  console.log(\"signup\");\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n  return<Grid item xs={12}>\n            <form>\n              <FormControl style={{width: '100%'}}>\n                  <TextField id=\"filled-basic\" label=\"이름 (2자 이상)\" variant=\"filled\" type=\"name\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         style={{ marginTop: '3%'}} />\n              </FormControl>\n              <FormControl style={{width: '100%'}}>\n                  <TextField id=\"filled-basic\" label=\"이메일 (example@gamil.com)\" variant=\"filled\" type=\"email\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         style={{ marginTop: '3%'}} />\n              </FormControl>\n              <FormControl style={{width: '100%'}}>\n                  <TextField id=\"filled-basic\" label=\"비밀번호 (6자 이상)\" variant=\"filled\" type=\"password\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         style={{ marginTop: '3%'}} />\n              </FormControl>\n\n\n              \n\n\n              <Button onClick={refreshPage} variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>계정 생성하기</Button>\n            </form>\n        </Grid>;\n});\n\nconst FindPassword = React.memo(function FindPassword() {\n  console.log(\"forget password\");\n  return<Grid item xs={12}>\n            <form>\n              <FormControl style={{width: '100%'}}>\n                    <TextField id=\"filled-basic\" label=\"이메일 (example@gmail.com)\" variant=\"filled\" type=\"email\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         style={{ marginTop: '3%'}} />\n              </FormControl>\n              <Button onClick={refreshPage} variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>확인</Button>\n            </form>\n        </Grid>;\n});\n\nfunction refreshPage() { window. location. reload(false); }\n\nexport default SignIn;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/Home.js",["102","103","104","105","106"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport back3 from '../../factory/images/home_back1.gif';\nimport LightButton from \"./LightButton\";\nimport ls2 from '../../factory/images/home_back2.jpg';\nimport {Typography} from \"@material-ui/core\";\nimport sang from '../../factory/images/sang.png';\nimport min from '../../factory/images/min.png';\nimport woo from '../../factory/images/woo.png';\nimport logo from '../../factory/images/logo.png';\n\nconst Home = () => (\n  <>\n      <Link to=\"/\">\n        <img onClick src={logo} style={{top: 0, height: '10%', position: \"fixed\", zIndex: 1, margin: '1%'}}></img>\n      </Link>\n      <ReactFullpage\n          scrollingSpeed = {800} navigation\n          render={({ state, fullpageApi }) => {\n              return (\n                  <ReactFullpage.Wrapper>\n                      <div className=\"section\"\n                          style={{backgroundImage: `url(${back3})`, backgroundSize: 'cover', backgroundPosition: 'center', padding: '1em'}}>\n\n                          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{minHeight: '75vh'}}>\n                              <Grid item xs={5}>\n                                  <Link to=\"/template\">\n                                      <LightButton />\n                                  </Link>\n                              </Grid>\n                          </Grid>\n                      </div>\n\n                      <div className=\"section\" style={{backgroundColor: 'rgb(235, 234, 229)', padding: '1em',}}>\n                          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{minHeight: '75vh'}}>\n                              <Grid item xs={5} style={{marginRight: '5%'}}>\n                                  <Grid container direction=\"column\">\n                                      <Grid item>\n                                          <Typography variant=\"h2\" style={{float: 'right', fontWeight: 900}}>FEF</Typography>\n                                      </Grid>\n                                      <Grid item>\n                                          <Typography variant=\"h4\" style={{float: 'right', fontWeight: 900}}>Fast Easy Free</Typography>\n                                      </Grid>\n                                  </Grid>\n                              </Grid>\n                              <Grid item xs={5} style={{marginTop: '1%'}}>\n                                  <img src={ls2} width='100%' />\n                              </Grid>\n                          </Grid>\n                      </div>\n\n                      <div className=\"section\" style={{backgroundColor: 'rgb(25,25,25)', padding: '1em',}}>\n\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{textAlign: \"center\"}}>\n                    <Grid item xs={12} style={{marginBottom: '2%'}}>\n                        <Typography variant=\"h3\" style={{fontSpacing: 5, fontWeight: 900, padding: 0, color: 'white', fontVariant: 'small-caps'}}>creator team</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginLeft: '8%'}}>\n                        <img src={sang} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>jisang yu</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>economics</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>jisang yu</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginRight: '3%', marginLeft: '3%'}}>\n                        <img src={woo} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>youngwoo choi</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>computer science</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>youngwoo choi</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginRight: '8%'}}>\n                        <img src={min} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>minho choi</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>computer science</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>minho choi</Typography>\n                    </Grid>\n\n                </Grid>\n            </div>\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  </>\n);\n\nexport default Home;\n\n// 참고자료: https://github.com/alvarotrigo/react-fullpage","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/Nav.js",["107","108","109","110"],"import React, { useEffect, useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport './Nav.css';\nimport logo from '../../factory/images/logo.png';\nimport NavItem from './NavItem';\nimport { Link } from 'react-router-dom';\nimport { AppBar } from \"@material-ui/core\";\nimport Search from \"./search/Search\";\n\nconst Nav = () =>{\n  const [mode, setMode] = useState(\"nav-init\");\n  const [mode2, setMode2] = useState(\"img-init\");\n  const pathname = window.location.pathname\n\n  useEffect(()=>{\n    function handleMode(){\n      if(window.scrollY > 0){\n        setMode(\"nav-shrink\");\n        setMode2(\"img-shrink\");\n      } else {\n        setMode(\"nav-init\");\n        setMode2(\"img-init\");\n      }\n    }\n    window.addEventListener(\"scroll\", handleMode);\n\n    return ()=>{\n      window.removeEventListener(\"scroll\", handleMode);\n    }\n  }, [])\n\n  return(\n      <AppBar className={mode} style={{justifyContent: 'center'}}>\n        <Link to=\"/\"><img className={mode2} src={logo} /></Link>\n        {/*<NavItem />*/}\n        <nav style={{ display: pathname == '/sign_in'? 'none': null, backgroundColor: mode === 'nav-shrink' ? '#081328' : null, paddingRight: '3%' }}>\n          <ul className=\"nav-ul\">\n            <li className=\"nav-li\" ><Search/></li>\n            <Link to=\"/template\" className=\"nav-link\">\n              <li className=\"nav-li\" style={{color: mode === 'nav-shrink' ? 'white' : null}}>템플릿</li>\n            </Link>\n            <Link to=\"/sign_in\" className=\"nav-link\">\n              <li onClick className=\"nav-li\"  style={{color: mode === 'nav-shrink' ? 'white' : null}}>로그인</li>\n            </Link>\n          </ul>\n        </nav>\n      </AppBar>\n  )\n}\n\nexport default Nav;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/service/Search.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/LightButton.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/NavItem.js",["111"],"import React from 'react';\n\nimport Search from './search/Search';\nimport { Link } from 'react-router-dom';\nimport './Nav.css';\n\nconst NavItem = () =>{\n\n    const pathname = window.location.pathname\n        return (\n            <nav style={{ display: pathname == '/sign_in'? 'none': null }}>\n                <ul className=\"nav-ul\">\n                    <li className=\"nav-li\"><Search/></li>\n                    <Link to=\"/template\" className=\"nav-link\">\n                        <li className=\"nav-li\">template</li>\n                    </Link>\n                    <Link to=\"/sign_in\" className=\"nav-link\">\n                        <li className=\"nav-li\">sign in</li>\n                    </Link>\n                </ul>\n            </nav>\n    )\n}\n\nexport default NavItem;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/List.js",["112"],"import React, {useState, useEffect} from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport Horizontal from './horizontal/Horizontal';\nimport Vertical from './vertical/Vertical';\nimport Keyword from './keyword/Keyword';\nimport Pagination from './pagination.js/Pagination';\n\nconst COUNT = 3;\n\nconst List = ({keyword, resume}) =>{\n\n  const [mode, setMode] = useState(0);    // horizontal : 0, 전체모드\n\n  const allCount = resume.length;\n  const initCount = allCount < COUNT ? allCount : COUNT;\n  const [count, setCount] = useState(initCount);\n\n  const countHandler = () =>{\n    if(count === allCount){\n      setCount(initCount);\n    }\n    else{\n      let newCount = count+COUNT < allCount ? count+COUNT : allCount;\n      setCount(newCount);\n    }\n  }\n\n\n  useEffect(()=>{\n    const widthListener = () =>{\n      if(window.innerWidth > 770){\n        setMode(0);\n      }else{\n        setMode(1);\n      }\n    }\n    setCount(initCount);\n    window.addEventListener(\"resize\", widthListener);\n    return ()=>{\n      window.removeEventListener(\"resize\", widthListener);\n    }\n  }, [keyword])\n\n\n  return (\n    <Grid container justify=\"center\" style={{marginTop: 102}}>\n      <Keyword mode={mode} keyword={keyword}/>\n      {mode === 0 ?\n        <Horizontal resume={resume} count={count}/>\n      :\n        <Vertical resume={resume} count={count}/>\n      }\n      <Grid container xs={8}>\n        <Pagination countHandler={countHandler} count={count} allCount={allCount}/>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default List;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/search/Search.js",["113","114","115","116"],"import React, {useState} from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport axios from 'axios';\nimport { FiSearch } from 'react-icons/fi';\nimport {useHistory} from 'react-router-dom';\n\nimport './Search.css';\n\nconst Search = () =>{\n  const [mode, setMode] = useState(0);\n  const history = useHistory();\n  const TEMPLATE_BASE_URL = 'http://localhost:8080/template';\n\n  const modeHandler = () =>{\n    if(mode === 0){\n      setMode(1)\n    }\n  }\n\n  const searchEvent = (e) =>{\n    e.preventDefault();\n    const body = {\n      keyword : e.target.keyword.value\n    }\n    if(body.keyword === \"\") return;\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: body\n    })\n    .then((res)=>{\n      history.push({\n        pathname: \"/search/\"+body.keyword,\n        state:{\n          resume: res.data\n        }\n      });\n\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n  }\n\n  return(\n    <>\n\n      <button className=\"search-button\" onClick={modeHandler}>\n        <form onSubmit={searchEvent}>\n          <p className=\"search-button-font\">\n            <FiSearch/>\n            검색{\" \"}\n            {mode === 0 ? <></> :\n              <input className=\"search-button-input\" id='keyword' name='keyword' type='keyword' autoFocus></input>\n            }\n          </p>\n        </form>\n      </button>\n    </>\n  );\n}\n\nexport default Search;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/pagination.js/Pagination.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/keyword/Keyword.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Vertical.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Horizontal.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Item.js",["117"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport woo from '../../../factory/images/woo.png';\nimport './horizontal.css';\n\nconst Item = ({item}) => {\n\n  return(\n    <Grid item xs={4} className='horizontal-item-grid'>\n      <button className='horizontal-item-btn'>\n        <img src={woo} className='horizontal-item-img'/>\n        <p className='horizontal-item-title'>{item.valueword}</p>\n      </button>\n    </Grid>\n  )\n}\n\nfunction areEqual(preProps, nextProps){\n  if(preProps.item.id === nextProps.item.id){\n    return true;\n  }else {\n    return false;\n  }\n}\n\n\n\nexport default React.memo(Item, areEqual);",["118","119"],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Item.js",["120"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport './vertical.css';\nimport woo from '../../../factory/images/woo.png';\n\nconst Item = ({item}) => {\n\n  return(\n    <>\n      <Grid item xs={3}>\n        <button className='vertical-item-btn'>\n          <img className='vertical-item-img' src={woo} />\n        </button>\n      </Grid>\n      <Grid item xs={8}>\n        <Grid container>\n          <p className='vertical-item-title'>{item.valueword}</p>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nfunction areEqual(preProps, nextProps){\n  if(preProps.item.id === nextProps.item.id){\n    return true;\n  }else {\n    return false;\n  }\n}\n\nexport default React.memo(Item, areEqual);","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template1.js",["121","122","123","124"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n    Button,\n    Card,\n    CardContent, FormControl, FormControlLabel, FormLabel,\n    Grid,\n    Paper, Radio, RadioGroup,\n    Table,\n    TableBody, TableCell, TableContainer,\n    TableHead, TableRow,\n    TextField,\n    Typography\n} from '@material-ui/core';\nimport CustomTextField from \"./CustomTextField\";\n\nconst Template1 = () =>{\n    const { handleSubmit, register, errors } = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\"\n                  style={{marginTop: 102, textAlign: \"center\", paddingLeft: '15%', paddingRight: '15%'}}>\n                <Grid item xs={4}>\n                    <Button variant=\"contained\" component=\"label\">\n                        Image Upload\n                        <input type=\"file\" hidden/>\n                    </Button>\n                </Grid>\n                <Grid container xs={8} style={{textAlign: 'left'}}>\n                    <Grid item xs={5}>\n                        <Grid item xs={12}>\n                            {/* Customize TextField */}\n                            {/*<FormControl className=\"input\">*/}\n                            {/*    <TextField*/}\n                            {/*        onChange={handleChange}*/}\n                            {/*        id=\"name\" name=\"name\"*/}\n                            {/*        label=\"이름 *\"*/}\n                            {/*        variant=\"outlined\"*/}\n                            {/*        inputRef={*/}\n                            {/*            register({*/}\n                            {/*                required: true, minLength: 2 })}*/}\n                            {/*        error={errors.name ? true : false}*/}\n                            {/*        helperText={errors.name ?*/}\n                            {/*            errors.name.type === \"required\" ? \"This field is required\" :*/}\n                            {/*            \"min length is 2 characters\" : null}*/}\n                            {/*    />*/}\n                            {/*</FormControl>*/}\n                            <CustomTextField\n                                register={register}\n                                errors={errors.name}    // 사용 errors.[사용할 filed name]\n                                name=\"name\" label=\"이름\" required={true}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                register={register}\n                                errors={errors.eng_name}\n                                name=\"eng_name\" label=\"영어이름\" required={true}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={5}>\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                register={register}\n                                errors={errors.birth}\n                                name=\"birth\" label=\"생년월일\" required={true}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <CustomTextField\n                                register={register}\n                                errors={errors.phone}\n                                name=\"phone\" label=\"휴대폰\" required={true}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            register={register}\n                            errors={errors.address}\n                            name=\"address\" label=\"거주지(현주소)\" required={true}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CustomTextField\n                            register={register}\n                            errors={errors.email}\n                            name=\"email\" label=\"이메일\" required={true}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'left', marginBottom: 24}}>\n                    {/*<Paper variant=\"outlined\"></Paper>*/}\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>학 력 사 항</Typography>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"right\" style={{width: '20%'}}>졸업일</TableCell>\n                                    <TableCell align=\"right\">학교명</TableCell>\n                                    <TableCell align=\"right\">전 공</TableCell>\n                                    <TableCell align=\"right\" style={{width: '13%'}}>졸업여부</TableCell>\n                                    <TableCell align=\"right\" style={{width: '10%'}}>성 적</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* HighSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"고등학교\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* University */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"대학교\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* GraduateSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"대학원\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'left', marginBottom: 24}}>\n                    {/*<Paper variant=\"outlined\"></Paper>*/}\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>경 력 사 항</Typography>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"right\" style={{width: '20%'}}>근무기간</TableCell>\n                                    <TableCell align=\"right\" style={{width: '35%'}}>회사명</TableCell>\n                                    <TableCell align=\"right\">직 위</TableCell>\n                                    <TableCell align=\"right\">담당업무</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* HighSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* University */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={12} style={{textAlign: 'left', marginBottom: 24}}>\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>자 격 사 항</Typography>\n\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"right\" style={{width: '20%'}}>취득일</TableCell>\n                                    <TableCell align=\"right\">종 류</TableCell>\n                                    <TableCell align=\"right\" style={{width: '30%'}}>발 령 처</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/* HighSchool */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                                {/* University */}\n                                <TableRow>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                    <TableCell>\n                                        <CustomTextField register={register} name=\"address\" label=\"\"/>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={5} style={{textAlign: 'left', marginBottom: 24}}>\n                    <TableContainer component={Paper} variant=\"outlined\">\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>병 역 사 항</Typography>\n\n                        <FormControl component=\"fieldset\" style={{margin: 20}}>\n                            <RadioGroup row  name=\"military_status\" defaultValue=\"init\">\n                                <FormControlLabel value=\"fulfilled\" control={<Radio color=\"primary\" />} label=\"군필\" />\n                                <FormControlLabel value=\"unfulfilled\" control={<Radio color=\"primary\" />} label=\"미필\" />\n                                <FormControlLabel value=\"Exempted\" control={<Radio color=\"primary\" />} label=\"면제\" />\n                                <FormControlLabel value=\"etc\" control={<Radio color=\"primary\" />} label=\"기타\" />\n                            </RadioGroup>\n                        </FormControl>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={6} style={{textAlign: 'left', marginBottom: 24}}>\n                    <TableContainer component={Paper} variant=\"outlined\" style={{height: 116}}>\n                        <Typography variant=\"h6\" style={{paddingLeft: 10, backgroundColor: '#081328', color: 'whitesmoke'}}>기 타 사 항</Typography>\n\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">submit</Button>\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n}\n\nexport default Template1;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/CustomTextField.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":4,"column":59,"nodeType":"131","messageId":"132","endLine":4,"endColumn":68},{"ruleId":"129","severity":1,"message":"134","line":4,"column":70,"nodeType":"131","messageId":"132","endLine":4,"endColumn":79},{"ruleId":"129","severity":1,"message":"135","line":4,"column":81,"nodeType":"131","messageId":"132","endLine":4,"endColumn":97},{"ruleId":"129","severity":1,"message":"136","line":4,"column":99,"nodeType":"131","messageId":"132","endLine":4,"endColumn":107},{"ruleId":"129","severity":1,"message":"137","line":4,"column":109,"nodeType":"131","messageId":"132","endLine":4,"endColumn":123},{"ruleId":"129","severity":1,"message":"138","line":82,"column":9,"nodeType":"131","messageId":"132","endLine":82,"endColumn":21},{"ruleId":"129","severity":1,"message":"139","line":87,"column":9,"nodeType":"131","messageId":"132","endLine":87,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":137,"column":26,"nodeType":"142","messageId":"143","endLine":137,"endColumn":50,"fix":"144"},{"ruleId":"140","severity":1,"message":"145","line":137,"column":26,"nodeType":"142","messageId":"143","endLine":137,"endColumn":42,"fix":"146"},{"ruleId":"147","severity":1,"message":"148","line":19,"column":9,"nodeType":"149","endLine":19,"endColumn":109},{"ruleId":"147","severity":1,"message":"148","line":51,"column":35,"nodeType":"149","endLine":51,"endColumn":65},{"ruleId":"147","severity":1,"message":"148","line":64,"column":25,"nodeType":"149","endLine":64,"endColumn":86},{"ruleId":"147","severity":1,"message":"148","line":71,"column":25,"nodeType":"149","endLine":71,"endColumn":85},{"ruleId":"147","severity":1,"message":"148","line":78,"column":25,"nodeType":"149","endLine":78,"endColumn":85},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"150","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":34,"column":22,"nodeType":"149","endLine":34,"endColumn":58},{"ruleId":"151","severity":1,"message":"152","line":36,"column":41,"nodeType":"153","messageId":"154","endLine":36,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":11,"column":45,"nodeType":"153","messageId":"154","endLine":11,"endColumn":47},{"ruleId":"155","severity":1,"message":"156","line":43,"column":6,"nodeType":"157","endLine":43,"endColumn":15,"suggestions":"158"},{"ruleId":"129","severity":1,"message":"159","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"160","line":2,"column":16,"nodeType":"131","messageId":"132","endLine":2,"endColumn":26},{"ruleId":"129","severity":1,"message":"161","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":18},{"ruleId":"129","severity":1,"message":"162","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":12,"column":9,"nodeType":"149","endLine":12,"endColumn":57},{"ruleId":"125","replacedBy":"163"},{"ruleId":"127","replacedBy":"164"},{"ruleId":"147","severity":1,"message":"148","line":13,"column":11,"nodeType":"149","endLine":13,"endColumn":58},{"ruleId":"129","severity":1,"message":"165","line":5,"column":5,"nodeType":"131","messageId":"132","endLine":5,"endColumn":9},{"ruleId":"129","severity":1,"message":"166","line":6,"column":5,"nodeType":"131","messageId":"132","endLine":6,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":6,"column":49,"nodeType":"131","messageId":"132","endLine":6,"endColumn":58},{"ruleId":"129","severity":1,"message":"167","line":12,"column":5,"nodeType":"131","messageId":"132","endLine":12,"endColumn":14},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FormHelperText' is defined but never used.","'handleChange' is assigned a value but never used.","'error' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property reload.","MemberExpression","unexpectedWhitespace",{"range":"170","text":"171"},"Unexpected whitespace before property location.",{"range":"172","text":"171"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NavItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initCount'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'fade' is defined but never used.","'makeStyles' is defined but never used.","'SearchIcon' is defined but never used.","'InputBase' is defined but never used.",["168"],["169"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation",[5921,5923],".",[5911,5913],{"desc":"174","fix":"175"},"Update the dependencies array to be: [initCount, keyword]",{"range":"176","text":"177"},[1074,1083],"[initCount, keyword]"]