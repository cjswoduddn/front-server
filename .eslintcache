[{"/Users/minhoui/Desktop/study/project/jolp/front-server/src/index.js":"1","/Users/minhoui/Desktop/study/project/jolp/front-server/src/App.js":"2","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/Home.js":"3","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/service/Search.js":"4","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template.js":"5","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/Nav.js":"6","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/sib/Sib.js":"7","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignIn.js":"8","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/LightButton.js":"9","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/List.js":"10","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/NavItem.js":"11","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/LogIn.js":"12","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignUp.js":"13","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/search/Search.js":"14","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/pagination.js/Pagination.js":"15","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/keyword/Keyword.js":"16","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Vertical.js":"17","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Horizontal.js":"18","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Item.js":"19","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Item.js":"20"},{"size":243,"mtime":1609227681576,"results":"21","hashOfConfig":"22"},{"size":919,"mtime":1611037074829,"results":"23","hashOfConfig":"22"},{"size":5091,"mtime":1609941360050,"results":"24","hashOfConfig":"22"},{"size":301,"mtime":1609941573036,"results":"25","hashOfConfig":"22"},{"size":230,"mtime":1611035413229,"results":"26","hashOfConfig":"22"},{"size":930,"mtime":1611037074830,"results":"27","hashOfConfig":"22"},{"size":3605,"mtime":1611037074830,"results":"28","hashOfConfig":"22"},{"size":3118,"mtime":1611037074831,"results":"29","hashOfConfig":"22"},{"size":198,"mtime":1609391766519,"results":"30","hashOfConfig":"22"},{"size":1521,"mtime":1609941573032,"results":"31","hashOfConfig":"22"},{"size":764,"mtime":1609941895099,"results":"32","hashOfConfig":"22"},{"size":2203,"mtime":1611037074831,"results":"33","hashOfConfig":"22"},{"size":2492,"mtime":1611037074831,"results":"34","hashOfConfig":"22"},{"size":3044,"mtime":1611035413229,"results":"35","hashOfConfig":"22"},{"size":394,"mtime":1609941573033,"results":"36","hashOfConfig":"22"},{"size":386,"mtime":1609941573033,"results":"37","hashOfConfig":"22"},{"size":363,"mtime":1609941573034,"results":"38","hashOfConfig":"22"},{"size":366,"mtime":1609941573032,"results":"39","hashOfConfig":"22"},{"size":630,"mtime":1609941573033,"results":"40","hashOfConfig":"22"},{"size":695,"mtime":1609941573034,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"61qu1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/minhoui/Desktop/study/project/jolp/front-server/src/index.js",[],["94","95"],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/App.js",["96","97"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\n\nimport Nav from './component/navigation/Nav';\nimport SignIn from './component/signin/SignIn';\nimport Home from './component/home/Home';\nimport Search from './component/service/Search';\nimport Template from './component/template/Template';\n\nimport Sib from './component/sib/Sib';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route path=\"/\"><Nav /></Route>\n      </Switch>\n\n      {/*<Route path=\"/\"><Grid container style={{height: \"102px\"}}></Grid></Route>*/}\n\n      <Switch>\n        <Route path=\"/sign_in\"><SignIn /></Route>\n        <Route path=\"/search/:path\"><Search/></Route>\n        {/* <Route path=\"/template\"><Template/></Route> */}\n        <Route path=\"/template\"><Sib/></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/Home.js",["98","99","100","101","102"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport Grid from \"@material-ui/core/Grid\";\nimport back3 from '../../factory/images/home_back1.gif';\nimport LightButton from \"./LightButton\";\nimport ls2 from '../../factory/images/home_back2.jpg';\nimport {Typography} from \"@material-ui/core\";\nimport sang from '../../factory/images/sang.png';\nimport min from '../../factory/images/min.png';\nimport woo from '../../factory/images/woo.png';\nimport logo from '../../factory/images/logo.png';\n\nconst Home = () => (\n  <>\n      <Link to=\"/\">\n        <img onClick src={logo} style={{top: 0, height: '10%', position: \"fixed\", zIndex: 1, margin: '1%'}}></img>\n      </Link>\n      <ReactFullpage\n          scrollingSpeed = {800} navigation\n          render={({ state, fullpageApi }) => {\n              return (\n                  <ReactFullpage.Wrapper>\n                      <div className=\"section\"\n                          style={{backgroundImage: `url(${back3})`, backgroundSize: 'cover', backgroundPosition: 'center', padding: '1em'}}>\n\n                          <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{minHeight: '75vh'}}>\n                              <Grid item xs={5}>\n                                  <Link to=\"/template\">\n                                      <LightButton />\n                                  </Link>\n                              </Grid>\n                          </Grid>\n                      </div>\n\n                      <div className=\"section\" style={{backgroundColor: 'rgb(235, 234, 229)', padding: '1em',}}>\n                          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{minHeight: '75vh'}}>\n                              <Grid item xs={5} style={{marginRight: '5%'}}>\n                                  <Grid container direction=\"column\">\n                                      <Grid item>\n                                          <Typography variant=\"h2\" style={{float: 'right', fontWeight: 900}}>FEF</Typography>\n                                      </Grid>\n                                      <Grid item>\n                                          <Typography variant=\"h4\" style={{float: 'right', fontWeight: 900}}>Fast Easy Free</Typography>\n                                      </Grid>\n                                  </Grid>\n                              </Grid>\n                              <Grid item xs={5} style={{marginTop: '1%'}}>\n                                  <img src={ls2} width='100%' />\n                              </Grid>\n                          </Grid>\n                      </div>\n\n                      <div className=\"section\" style={{backgroundColor: 'rgb(25,25,25)', padding: '1em',}}>\n\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{textAlign: \"center\"}}>\n                    <Grid item xs={12} style={{marginBottom: '2%'}}>\n                        <Typography variant=\"h3\" style={{fontSpacing: 5, fontWeight: 900, padding: 0, color: 'white', fontVariant: 'small-caps'}}>creator team</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginLeft: '8%'}}>\n                        <img src={sang} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>jisang yu</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>economics</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>jisang yu</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginRight: '3%', marginLeft: '3%'}}>\n                        <img src={woo} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>youngwoo choi</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>computer science</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>youngwoo choi</Typography>\n                    </Grid>\n\n                    <Grid item xs={3} style={{marginRight: '8%'}}>\n                        <img src={min} width='100%' style={{borderRadius: '50%'}} />\n                        <Typography variant=\"h4\" style={{color: 'white', fontVariant: 'small-caps'}}>minho choi</Typography>\n                        <Typography variant=\"h5\" style={{color: 'white', fontVariant: 'small-caps'}}>computer science</Typography>\n                        <Typography variant=\"h6\" style={{color: 'white', fontVariant: 'small-caps'}}>minho choi</Typography>\n                    </Grid>\n\n                </Grid>\n            </div>\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  </>\n);\n\nexport default Home;\n\n// 참고자료: https://github.com/alvarotrigo/react-fullpage","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/service/Search.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/template/Template.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/Nav.js",["103"],"import React, { useEffect, useState } from 'react';\nimport './Nav.css';\nimport logo from '../../factory/images/logo.png';\nimport NavItem from './NavItem';\nimport { Link } from 'react-router-dom';\nimport { AppBar } from \"@material-ui/core\";\n\nconst Nav = () =>{\n  const [mode, setMode] = useState(\"nav-init\");\n  const [mode2, setMode2] = useState(\"img-init\");\n\n  useEffect(()=>{\n    function handleMode(){\n      if(window.scrollY > 0){\n        setMode(\"nav-shrink\");\n        setMode2(\"img-shrink\");\n      } else {\n        setMode(\"nav-init\");\n        setMode2(\"img-init\");\n      }\n    }\n    window.addEventListener(\"scroll\", handleMode);\n\n    return ()=>{\n      window.removeEventListener(\"scroll\", handleMode);\n    }\n  }, [])\n\n  return(\n      <AppBar className={mode} style={{justifyContent: 'center'}}>\n        <Link to=\"/\"><img className={mode2} src={logo} /></Link>\n        <NavItem />\n      </AppBar>\n  )\n}\n\nexport default Nav;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/sib/Sib.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignIn.js",["104","105","106","107","108","109","110"],"import React, {useState} from 'react';\nimport './SignIn.css'\nimport signin_back from '../../factory/images/signin_back3.jpg';\nimport {Grid, TextField, Typography, Button, FormControl, FormLabel, FormGroup, FormControlLabel, Checkbox, FormHelperText} from \"@material-ui/core\";\nimport SignUp from './SignUp';\nimport LogIn from './LogIn';\n\nconst SignIn = () =>{\n    const [mode, setMode] = useState(0);\n    return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"\n          style={{backgroundImage: `url(${signin_back})`, height: '100vh', textAlign: 'center'}}>\n          <Grid item xs={3} style={{color: 'white'}}>\n              <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item xs={6}>\n                      {mode === 0 ? (<Typography variant=\"h6\" style={{textAlign: 'left'}}>로그인</Typography>) :\n                       mode === 1 ? (<Typography variant=\"h6\" style={{textAlign: 'left'}}>회원가입</Typography>) :\n                                    (<Typography variant=\"h6\" style={{textAlign: 'left'}}>비밀번호 찾기</Typography>)\n                      }\n                  </Grid>\n                      { mode === 0 ? (\n                          <Grid item xs={6}>\n                              <Button onClick={() => setMode(2)} style={{padding: 0}}>\n                                  <Typography variant=\"overline\" style={{textAlign: 'right', fontWeight: 500, color: 'grey'}}> 비밀번호를 잊어버리셨나요?</Typography>\n                              </Button>\n                          </Grid>) : <Grid item xs={6}></Grid>\n                      }\n\n                      {mode === 0 ? <LogIn/> :\n                       mode === 1 ? <SignUp/> :\n                                    <FindPassword/>}\n\n                       <Grid item xs={12}>\n                      {mode === 0 ?\n                          <Button onClick={() => setMode(1)} style={{padding: 0}}>\n                              <Typography variant=\"overline\" style={{width: '100%', textAlign: 'right', fontWeight: 500, color: 'grey', position: 'right'}}>계정 생성하기</Typography>\n                          </Button> : <></>\n                      }\n                       </Grid>\n              </Grid>\n          </Grid>\n      </Grid>\n\n  );\n}\n\nconst FindPassword = React.memo(function FindPassword() {\n  console.log(\"forget password\");\n  return<Grid item xs={12}>\n            <form>\n              <FormControl style={{width: '100%'}}>\n                    <TextField id=\"filled-basic\" label=\"이메일 (example@gmail.com)\" variant=\"filled\" type=\"email\"\n                         InputProps={{\n                           style: { backgroundColor: 'whitesmoke'}\n                         }}\n                         style={{ marginTop: '3%'}} />\n              </FormControl>\n              <Button onClick={refreshPage} variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>확인</Button>\n            </form>\n        </Grid>;\n});\n\nfunction refreshPage() { window. location. reload(false); }\n\nexport default SignIn;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/home/LightButton.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/List.js",["111"],"import React, {useState, useEffect} from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport Horizontal from './horizontal/Horizontal';\nimport Vertical from './vertical/Vertical';\nimport Keyword from './keyword/Keyword';\nimport Pagination from './pagination.js/Pagination';\n\nconst COUNT = 3;\n\nconst List = ({keyword, resume}) =>{\n\n  const [mode, setMode] = useState(0);    // horizontal : 0, 전체모드\n\n  const allCount = resume.length;\n  const initCount = allCount < COUNT ? allCount : COUNT;\n  const [count, setCount] = useState(initCount);\n\n  const countHandler = () =>{\n    if(count === allCount){\n      setCount(initCount);\n    }\n    else{\n      let newCount = count+COUNT < allCount ? count+COUNT : allCount;\n      setCount(newCount);\n    }\n  }\n\n\n  useEffect(()=>{\n    const widthListener = () =>{\n      if(window.innerWidth > 770){\n        setMode(0);\n      }else{\n        setMode(1);\n      }\n    }\n    setCount(initCount);\n    window.addEventListener(\"resize\", widthListener);\n    return ()=>{\n      window.removeEventListener(\"resize\", widthListener);\n    }\n  }, [keyword])\n\n\n  return (\n    <Grid container justify=\"center\" style={{marginTop: 102}}>\n      <Keyword mode={mode} keyword={keyword}/>\n      {mode === 0 ?\n        <Horizontal resume={resume} count={count}/>\n      :\n        <Vertical resume={resume} count={count}/>\n      }\n      <Grid container xs={8}>\n        <Pagination countHandler={countHandler} count={count} allCount={allCount}/>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default List;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/NavItem.js",["112"],"import React from 'react';\n\nimport Search from './search/Search';\nimport { Link } from 'react-router-dom';\nimport './Nav.css';\n\nconst NavItem = () =>{\n\n    const pathname = window.location.pathname\n        return (\n            <nav style={{ display: pathname == '/sign_in'? 'none': null }}>\n                <ul className=\"nav-ul\">\n                    <li className=\"nav-li\"><Search/></li>\n                    <Link to=\"/template\" className=\"nav-link\">\n                        <li className=\"nav-li\">template</li>\n                    </Link>\n                    <Link to=\"/sign_in\" className=\"nav-link\">\n                        <li className=\"nav-li\">sign in</li>\n                    </Link>\n                </ul>\n            </nav>\n    )\n}\n\nexport default NavItem;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/LogIn.js",["113"],"import React from 'react';\nimport './SignIn.css'\nimport {Grid, TextField, Button, FormControl} from \"@material-ui/core\";\nimport { useForm, Controller } from 'react-hook-form';\nimport axios from 'axios';\n\nconst TEMPLATE_BASE_URL = 'http://localhost:8080/process';\n\nconst LogIn = () =>{\n  const methods = useForm();\n  const { handleSubmit, reset, control} = methods;\n  const onSubmit = data =>{\n    console.log(data);\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: data\n    })\n    .then((res)=>{\n      console.log(\"succeslla\");\n      console.log(res);\n    })\n    .catch((err)=>{\n      console.log(\"sail\");\n      console.log(err);\n    });\n\n  }\n\n  return(\n    <Grid item xs={12}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"username\"\n            control={control}\n            rules={{ required: \"This is requierd\", minLength: 2 }}\n            as={\n              <TextField \n                id=\"login-email\"\n                label=\"이메일 (example@gmail.com)\" \n                variant=\"filled\" \n                type=\"email\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{ required: \"This is requierd\", minLength: 2 }}\n            as={\n              <TextField\n                id=\"login-password\" \n                label=\"비밀번호\" \n                variant=\"filled\" \n                type=\"password\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <Button type=\"submit\" variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>로그인</Button>\n      </form>\n    </Grid>\n  )\n}\n\nexport default LogIn;\n","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/signin/SignUp.js",["114"],"import React from 'react';\nimport {Grid, TextField, Button, FormControl} from \"@material-ui/core\";\nimport { useForm, Controller } from 'react-hook-form';\nimport axios from 'axios';\n\nconst TEMPLATE_BASE_URL = 'http://localhost:8080/member';\n\nconst SignUp = () => {\n  const methods = useForm();\n  const { handleSubmit, reset, control} = methods;\n  const onSubmit = data =>{\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: data\n    })\n    .then((res)=>{\n      console.log(res.body);\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n\n  }\n\n  return(\n    <Grid item xs={12}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"name\"\n            control={control}\n            rules={{ required: \"This is requierd\", minLength: 2 }}\n            as={\n              <TextField\n               id=\"signup\"\n               label=\"이름 (2자 이상)\"\n               variant=\"filled\"\n               InputProps={{\n                 style: { backgroundColor: 'whitesmoke'}\n               }}\n               style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"email\"\n            control={control}\n            rules={{ required: true }}\n            as={\n              <TextField id=\"filled-basic\" label=\"이메일 (example@gamil.com)\" variant=\"filled\" type=\"email\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <FormControl style={{width: '100%'}}>\n          <Controller\n            name=\"password\"\n            control={control}\n            rules={{ required: true, minLength: 6 }}\n            as={\n              <TextField id=\"filled-basic\" label=\"비밀번호 (6자 이상)\" variant=\"filled\" type=\"password\"\n                InputProps={{\n                  style: { backgroundColor: 'whitesmoke'}\n                }}\n                style={{ marginTop: '3%'}} />\n            }\n          />\n        </FormControl>\n        <Button type=\"submit\"\n          variant=\"contained\" className=\"form-button\" style={{marginTop: '3%', fontSize: '18px', borderRadius: '30px'}}>계정 생성하기</Button>\n      </form>\n    </Grid>\n  )\n}\n\nexport default SignUp;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/navigation/search/Search.js",["115","116","117","118"],"import React, {useState} from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport axios from 'axios';\nimport { FiSearch } from 'react-icons/fi';\nimport {useHistory} from 'react-router-dom';\n\nimport './Search.css';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: 'red',\n    '&:hover': {\n      backgroundColor: 'red',\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    // padding: theme.spacing(0, 2),\n    padding: '0 2%',\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst Search = () =>{\n  const classes = useStyles();\n  const [mode, setMode] = useState(0);\n  const history = useHistory();\n  const TEMPLATE_BASE_URL = 'http://localhost:8080/template';\n\n  const modeHandler = () =>{\n    if(mode === 0){\n      setMode(1)\n    }\n  }\n\n  const searchEvent = (e) =>{\n    e.preventDefault();\n    const body = {\n      keyword : e.target.keyword.value\n    }\n    if(body.keyword === \"\") return;\n    axios({\n      method: 'post',\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      url: TEMPLATE_BASE_URL,\n      data: body\n    })\n    .then((res)=>{\n      history.push({\n        pathname: \"/search/\"+body.keyword,\n        state:{\n          resume: res.data\n        }\n      });\n\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n  }\n\n  return(\n    <>\n      <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n\n      {/*<button className=\"search-button\" onClick={modeHandler}>*/}\n      {/*  <form onSubmit={searchEvent}>*/}\n      {/*    <p className=\"search-button-font\">*/}\n      {/*      <FiSearch/>*/}\n      {/*      검색{\" \"}*/}\n      {/*      {mode === 0 ? <></> :*/}\n      {/*        <input className=\"search-button-input\" id='keyword' name='keyword' type='keyword' autoFocus></input>*/}\n      {/*      }*/}\n      {/*    </p>*/}\n      {/*  </form>*/}\n      {/*</button>*/}\n    </>\n  );\n}\n\nexport default Search;","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/pagination.js/Pagination.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/keyword/Keyword.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Vertical.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Horizontal.js",[],"/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/horizontal/Item.js",["119"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport woo from '../../../factory/images/woo.png';\nimport './horizontal.css';\n\nconst Item = ({item}) => {\n\n  return(\n    <Grid item xs={4} className='horizontal-item-grid'>\n      <button className='horizontal-item-btn'>\n        <img src={woo} className='horizontal-item-img'/>\n        <p className='horizontal-item-title'>{item.valueword}</p>\n      </button>\n    </Grid>\n  )\n}\n\nfunction areEqual(preProps, nextProps){\n  if(preProps.item.id === nextProps.item.id){\n    return true;\n  }else {\n    return false;\n  }\n}\n\n\n\nexport default React.memo(Item, areEqual);","/Users/minhoui/Desktop/study/project/jolp/front-server/src/component/list/vertical/Item.js",["120"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport './vertical.css';\nimport woo from '../../../factory/images/woo.png';\n\nconst Item = ({item}) => {\n\n  return(\n    <>\n      <Grid item xs={3}>\n        <button className='vertical-item-btn'>\n          <img className='vertical-item-img' src={woo} />\n        </button>\n      </Grid>\n      <Grid item xs={8}>\n        <Grid container>\n          <p className='vertical-item-title'>{item.valueword}</p>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nfunction areEqual(preProps, nextProps){\n  if(preProps.item.id === nextProps.item.id){\n    return true;\n  }else {\n    return false;\n  }\n}\n\nexport default React.memo(Item, areEqual);",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":19,"column":9,"nodeType":"132","endLine":19,"endColumn":109},{"ruleId":"130","severity":1,"message":"131","line":51,"column":35,"nodeType":"132","endLine":51,"endColumn":65},{"ruleId":"130","severity":1,"message":"131","line":64,"column":25,"nodeType":"132","endLine":64,"endColumn":86},{"ruleId":"130","severity":1,"message":"131","line":71,"column":25,"nodeType":"132","endLine":71,"endColumn":85},{"ruleId":"130","severity":1,"message":"131","line":78,"column":25,"nodeType":"132","endLine":78,"endColumn":85},{"ruleId":"130","severity":1,"message":"131","line":31,"column":22,"nodeType":"132","endLine":31,"endColumn":58},{"ruleId":"125","severity":1,"message":"133","line":4,"column":59,"nodeType":"127","messageId":"128","endLine":4,"endColumn":68},{"ruleId":"125","severity":1,"message":"134","line":4,"column":70,"nodeType":"127","messageId":"128","endLine":4,"endColumn":79},{"ruleId":"125","severity":1,"message":"135","line":4,"column":81,"nodeType":"127","messageId":"128","endLine":4,"endColumn":97},{"ruleId":"125","severity":1,"message":"136","line":4,"column":99,"nodeType":"127","messageId":"128","endLine":4,"endColumn":107},{"ruleId":"125","severity":1,"message":"137","line":4,"column":109,"nodeType":"127","messageId":"128","endLine":4,"endColumn":123},{"ruleId":"138","severity":1,"message":"139","line":63,"column":26,"nodeType":"140","messageId":"141","endLine":63,"endColumn":50,"fix":"142"},{"ruleId":"138","severity":1,"message":"143","line":63,"column":26,"nodeType":"140","messageId":"141","endLine":63,"endColumn":42,"fix":"144"},{"ruleId":"145","severity":1,"message":"146","line":43,"column":6,"nodeType":"147","endLine":43,"endColumn":15,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":11,"column":45,"nodeType":"151","messageId":"152","endLine":11,"endColumn":47},{"ruleId":"125","severity":1,"message":"153","line":11,"column":25,"nodeType":"127","messageId":"128","endLine":11,"endColumn":30},{"ruleId":"125","severity":1,"message":"153","line":10,"column":25,"nodeType":"127","messageId":"128","endLine":10,"endColumn":30},{"ruleId":"125","severity":1,"message":"154","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"155","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"156","line":60,"column":9,"nodeType":"127","messageId":"128","endLine":60,"endColumn":20},{"ruleId":"125","severity":1,"message":"157","line":66,"column":9,"nodeType":"127","messageId":"128","endLine":66,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":12,"column":9,"nodeType":"132","endLine":12,"endColumn":57},{"ruleId":"130","severity":1,"message":"131","line":13,"column":11,"nodeType":"132","endLine":13,"endColumn":58},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Template' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FormHelperText' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property reload.","MemberExpression","unexpectedWhitespace",{"range":"160","text":"161"},"Unexpected whitespace before property location.",{"range":"162","text":"161"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initCount'. Either include it or remove the dependency array.","ArrayExpression",["163"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reset' is assigned a value but never used.","'fade' is defined but never used.","'FiSearch' is defined but never used.","'modeHandler' is assigned a value but never used.","'searchEvent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[3003,3005],".",[2993,2995],{"desc":"164","fix":"165"},"Update the dependencies array to be: [initCount, keyword]",{"range":"166","text":"167"},[1074,1083],"[initCount, keyword]"]